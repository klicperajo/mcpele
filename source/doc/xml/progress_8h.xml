<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="progress_8h" kind="file">
    <compoundname>progress.h</compoundname>
    <includes local="no">ctime</includes>
    <includes local="no">utility</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="mc_8cpp" local="yes">mc.cpp</includedby>
    <incdepgraph>
      <node id="240">
        <label>mcpele/progress.h</label>
        <link refid="progress.h"/>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
      </node>
      <node id="244">
        <label>string</label>
      </node>
      <node id="241">
        <label>ctime</label>
      </node>
      <node id="242">
        <label>utility</label>
      </node>
      <node id="243">
        <label>iostream</label>
      </node>
      <node id="245">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="247">
        <label>mc.cpp</label>
        <link refid="mc_8cpp"/>
      </node>
      <node id="246">
        <label>mcpele/progress.h</label>
        <link refid="progress.h"/>
        <childnode refid="247" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classmcpele_1_1progress" prot="public">mcpele::progress</innerclass>
    <innernamespace refid="namespacemcpele">mcpele</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_MCPELE_PROGRESS_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_MCPELE_PROGRESS_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mcpele{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>For<sp/>a<sp/>loop<sp/>of<sp/>total_iterations<sp/>steps<sp/>(assumed<sp/>to<sp/>take<sp/>on<sp/>average<sp/>the<sp/>same<sp/>time),</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>progress<sp/>keeps<sp/>track<sp/>of<sp/>the<sp/>time<sp/>that<sp/>elapsed,<sp/>computes<sp/>the<sp/>likely<sp/>total<sp/>time</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>the<sp/>whole<sp/>loop<sp/>will<sp/>take,<sp/>prints<sp/>the<sp/>local<sp/>time<sp/>at<sp/>which<sp/>the<sp/>loop<sp/>will<sp/>likely</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>terminate,<sp/>and<sp/>prints<sp/>how<sp/>much<sp/>time<sp/>is<sp/>left<sp/>until<sp/>loop<sp/>terimnation.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Output<sp/>is<sp/>printed<sp/>100<sp/>times,<sp/>for<sp/>each<sp/>percent<sp/>of<sp/>the<sp/>loop<sp/>that<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>The<sp/>usage<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>const<sp/>int<sp/>iterations<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>progress<sp/>status(iterations);</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>size_t<sp/>niter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>while<sp/>(niter<sp/>&lt;<sp/>iterations)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>do_something;</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>++niter;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>status.next(niter);</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Example<sp/>output:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>28<sp/>%.<sp/>done:<sp/>3<sp/>s.<sp/>todo:<sp/>10<sp/>s.<sp/>total:<sp/>14<sp/>s.<sp/>ends:<sp/>Thu<sp/>Jul<sp/>24<sp/>13:56:51<sp/>2014</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classmcpele_1_1progress" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmcpele_1_1progress" kindref="compound">progress</ref>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38" refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref>;</highlight></codeline>
<codeline lineno="39" refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>;</highlight></codeline>
<codeline lineno="40" refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref><sp/>m_inverse_of_total_iterations;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>m_total_iterations;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>m_curr;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>m_prev;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref><sp/>m_start_time;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classmcpele_1_1progress_1a85b33747573822894e73648ab9d39283" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a85b33747573822894e73648ab9d39283" kindref="member">progress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>totalin)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_inverse_of_total_iterations(1.0/static_cast&lt;<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>&gt;(totalin)),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_total_iterations(totalin),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_curr(0),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prev(0),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_start_time(clock())</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="classmcpele_1_1progress_1a5d43020edf40edcc80aacdd6d20ee381" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/><ref refid="classmcpele_1_1progress_1a5d43020edf40edcc80aacdd6d20ee381" kindref="member">get_current_percentage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_curr;<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classmcpele_1_1progress_1aefd26e12135e0b12f7b69ed09ca93822" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1aefd26e12135e0b12f7b69ed09ca93822" kindref="member">next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>idx,<sp/>std::ostream&amp;<sp/>stm<sp/>=<sp/>std::cout)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_curr<sp/>=<sp/>std::round((static_cast&lt;float_t&gt;(idx)<sp/>/<sp/>static_cast&lt;float_t&gt;(m_total_iterations))<sp/>*<sp/><ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>(100));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_curr<sp/>!=<sp/>m_prev)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a714ca1e3fd28ce6fd8b08b6dca897bb8" kindref="member">print_time_percentage</ref>(idx<sp/>-<sp/>1,<sp/>stm);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_curr<sp/>==<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classmcpele_1_1progress_1a714ca1e3fd28ce6fd8b08b6dca897bb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a714ca1e3fd28ce6fd8b08b6dca897bb8" kindref="member">print_time_percentage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>smp,<sp/>std::ostream&amp;<sp/>stm)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>percentage<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1ae1bf4cc3061af7aebc8e2e47e2a0d7ac" kindref="member">update_and_print_percentage_complete</ref>(stm);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time<sp/>elapsed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1ac0d3ff0e4d19c907998a6d7e79028684" kindref="member">get_and_print_elapsed_time</ref>(stm);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimated<sp/>time<sp/>to<sp/>completion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1abc1242a755e95d3e5e42c8d51f9ac111" kindref="member">estimate_and_print_time_to_complete</ref>(smp,<sp/>stm);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimated<sp/>total<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a269dd163562c738119be1d0eb62ff593" kindref="member">estimate_and_print_total_time</ref>(smp,<sp/>stm);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>estimated<sp/>completion<sp/>time<sp/>in<sp/>local<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a8d4b8ff4bbe4cf820310a7bdaef520be" kindref="member">estimate_and_print_completion_local_time</ref>(smp,<sp/>stm);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm.flush();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classmcpele_1_1progress_1ae1bf4cc3061af7aebc8e2e47e2a0d7ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1ae1bf4cc3061af7aebc8e2e47e2a0d7ac" kindref="member">update_and_print_percentage_complete</ref>(std::ostream&amp;<sp/>stm)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/>m_curr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_prev<sp/>=<sp/>m_curr;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classmcpele_1_1progress_1ac0d3ff0e4d19c907998a6d7e79028684" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1ac0d3ff0e4d19c907998a6d7e79028684" kindref="member">get_and_print_elapsed_time</ref>(std::ostream&amp;<sp/>stm)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;done&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a786d5d4edd6dd3e34fc0acc77a7bf548" kindref="member">print_estimated_time</ref>(clock()<sp/>-<sp/>m_start_time,<sp/>stm);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classmcpele_1_1progress_1abc1242a755e95d3e5e42c8d51f9ac111" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1abc1242a755e95d3e5e42c8d51f9ac111" kindref="member">estimate_and_print_time_to_complete</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>smp,<sp/>std::ostream&amp;<sp/>stm)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;todo&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a786d5d4edd6dd3e34fc0acc77a7bf548" kindref="member">print_estimated_time</ref>(((<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(m_total_iterations<sp/>-<sp/>smp<sp/>-<sp/>1)<sp/>/<sp/>(<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(smp<sp/>+<sp/>1))<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(clock()<sp/>-<sp/>m_start_time),<sp/>stm);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classmcpele_1_1progress_1a269dd163562c738119be1d0eb62ff593" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a269dd163562c738119be1d0eb62ff593" kindref="member">estimate_and_print_total_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>smp,<sp/>std::ostream&amp;<sp/>stm)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;total&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1a786d5d4edd6dd3e34fc0acc77a7bf548" kindref="member">print_estimated_time</ref>(((<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)m_total_iterations<sp/>/<sp/>(<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(smp<sp/>+<sp/>1))<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(clock()<sp/>-<sp/>m_start_time),<sp/>stm);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classmcpele_1_1progress_1a8d4b8ff4bbe4cf820310a7bdaef520be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a8d4b8ff4bbe4cf820310a7bdaef520be" kindref="member">estimate_and_print_completion_local_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a3af9df6e1a8f337ef00e368820377316" kindref="member">index_t</ref><sp/>smp,<sp/>std::ostream&amp;<sp/>stm)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ends&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_t<sp/>timer<sp/>=<sp/>time(NULL);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer<sp/>+=<sp/>(((<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(m_total_iterations<sp/>-<sp/>smp<sp/>-<sp/>1)<sp/>/<sp/>(<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(smp<sp/>+<sp/>1))<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1a58b0ad8ca4041095da304be26345e533" kindref="member">float_t</ref>)(clock()<sp/>-<sp/>m_start_time))<sp/>/<sp/>CLOCKS_PER_SEC;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tmp(ctime(&amp;timer));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.erase(std::remove(tmp.begin(),<sp/>tmp.end(),<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">),<sp/>tmp.end());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/>tmp;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classmcpele_1_1progress_1a786d5d4edd6dd3e34fc0acc77a7bf548" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1a786d5d4edd6dd3e34fc0acc77a7bf548" kindref="member">print_estimated_time</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref><sp/>inp,<sp/>std::ostream&amp;<sp/>stm)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref><sp/>tm<sp/>=<sp/>inp;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref><sp/>days<sp/>=<sp/>tm<sp/>/<sp/>((<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)CLOCKS_PER_SEC<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)24);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>%=<sp/>((<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)CLOCKS_PER_SEC<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)24);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref><sp/>hours<sp/>=<sp/>tm<sp/>/<sp/>((<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)CLOCKS_PER_SEC<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>%=<sp/>((<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)CLOCKS_PER_SEC<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref><sp/>minutes<sp/>=<sp/>tm<sp/>/<sp/>((<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)CLOCKS_PER_SEC<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>%=<sp/>((<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)CLOCKS_PER_SEC<sp/>*<sp/>(<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)60);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref><sp/>seconds<sp/>=<sp/>tm<sp/>/<sp/>((<ref refid="classmcpele_1_1progress_1aca882b448ea2df62757b62ccdcf72064" kindref="member">long_t</ref>)CLOCKS_PER_SEC);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(days)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/>days<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>d<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hours)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/>hours<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>h<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minutes)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/>minutes<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>m<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seconds)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stm<sp/>&lt;&lt;<sp/>seconds<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>mcpele</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif//#ifndef<sp/>_MCPELE_PROGRESS_H</highlight></codeline>
    </programlisting>
    <location file="/home/sm958/Work/mcpele/source/mcpele/progress.h"/>
  </compounddef>
</doxygen>
