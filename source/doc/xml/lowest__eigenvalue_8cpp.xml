<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="lowest__eigenvalue_8cpp" kind="file">
    <compoundname>lowest_eigenvalue.cpp</compoundname>
    <includes local="no">cmath</includes>
    <includes refid="lowest__eigenvalue_8h" local="yes">mcpele/lowest_eigenvalue.h</includes>
    <incdepgraph>
      <node id="56">
        <label>cmath</label>
      </node>
      <node id="59">
        <label>pele/lbfgs.h</label>
      </node>
      <node id="57">
        <label>mcpele/lowest_eigenvalue.h</label>
        <link refid="lowest__eigenvalue_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>pele/lowest_eig_potential.h</label>
      </node>
      <node id="55">
        <label>lowest_eigenvalue.cpp</label>
        <link refid="lowest_eigenvalue.cpp"/>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>pele/base_potential.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemcpele">mcpele</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lowest__eigenvalue_8h" kindref="compound">mcpele/lowest_eigenvalue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mcpele{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classmcpele_1_1FindLowestEigenvalue_1aa8cff93dfc74754b4bd4f290d852a7a0" refkind="member"><highlight class="normal"><ref refid="classmcpele_1_1FindLowestEigenvalue_1aa8cff93dfc74754b4bd4f290d852a7a0" kindref="member">FindLowestEigenvalue::FindLowestEigenvalue</ref>(std::shared_ptr&lt;pele::BasePotential&gt;<sp/>landscape_potential,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>boxdimension,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pele::Array&lt;double&gt;<sp/>ranvec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lbfgsniter)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_lowesteigpot(std::make_shared&lt;pele::LowestEigPotential&gt;(landscape_potential,<sp/>ranvec.copy(),<sp/>boxdimension)),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ranvec((ranvec.copy()<sp/>/=<sp/>norm(ranvec))),</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_lbfgs(m_lowesteigpot,<sp/>m_ranvec.copy())</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isinf(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(1)<sp/>/<sp/>norm(ranvec)))<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;FindLowestEigenvalue:<sp/>1/norm(ranvec)<sp/>is<sp/>isinf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lbfgs.set_max_iter(lbfgsniter);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classmcpele_1_1FindLowestEigenvalue_1a29f56a74823d7e974187b1a04ff44639" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1FindLowestEigenvalue_1a29f56a74823d7e974187b1a04ff44639" kindref="member">FindLowestEigenvalue::compute_lowest_eigenvalue</ref>(pele::Array&lt;double&gt;<sp/>coords)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lowesteigpot-&gt;reset_coords(coords);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lbfgs.reset(m_ranvec);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lbfgs.set_use_relative_f(1);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lbfgs.run();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowesteig<sp/>=<sp/>m_lbfgs.get_f();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lowesteig;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight><highlight class="comment">//namespace<sp/>mcpele</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sm958/Work/mcpele/source/lowest_eigenvalue.cpp"/>
  </compounddef>
</doxygen>
