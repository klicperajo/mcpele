<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="check__spherical__container_8cpp" kind="file">
    <compoundname>check_spherical_container.cpp</compoundname>
    <includes refid="check__spherical__container_8h" local="yes">mcpele/check_spherical_container.h</includes>
    <incdepgraph>
      <node id="19">
        <label>pele/distance.h</label>
      </node>
      <node id="18">
        <label>pele/optimizer.h</label>
      </node>
      <node id="10">
        <label>check_spherical_container.cpp</label>
        <link refid="check_spherical_container.cpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>mcpele/check_spherical_container.h</label>
        <link refid="check__spherical__container_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>stdexcept</label>
      </node>
      <node id="17">
        <label>pele/array.h</label>
      </node>
      <node id="15">
        <label>random</label>
      </node>
      <node id="20">
        <label>mc.h</label>
        <link refid="mc_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="16">
        <label>chrono</label>
      </node>
      <node id="14">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
      <node id="23">
        <label>pele/base_potential.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemcpele">mcpele</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="check__spherical__container_8h" kindref="compound">mcpele/check_spherical_container.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::runtime_error;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>pele::Array;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mcpele{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classmcpele_1_1CheckSphericalContainer_1af1ddbdb3d2651a18df37447af8749853" refkind="member"><highlight class="normal"><ref refid="classmcpele_1_1CheckSphericalContainer_1af1ddbdb3d2651a18df37447af8749853" kindref="member">CheckSphericalContainer::CheckSphericalContainer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ndim)</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>m_radius2(radius<sp/>*<sp/>radius),</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_ndim(ndim)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classmcpele_1_1CheckSphericalContainer_1a69f1b9e554a00d539477443dedbb3426" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmcpele_1_1CheckSphericalContainer_1a69f1b9e554a00d539477443dedbb3426" kindref="member">CheckSphericalContainer::conf_test</ref>(Array&lt;double&gt;<sp/>&amp;trial_coords,<sp/><ref refid="classmcpele_1_1MC" kindref="compound">MC</ref><sp/>*<sp/>mc)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>trial_coords.size();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i<sp/>+=<sp/><ref refid="classmcpele_1_1CheckSphericalContainer_1a4c900129e7fe133b1ddd3f9957eb1154" kindref="member">m_ndim</ref>)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;<sp/>j<sp/>&lt;<sp/>i<sp/>+<sp/><ref refid="classmcpele_1_1CheckSphericalContainer_1a4c900129e7fe133b1ddd3f9957eb1154" kindref="member">m_ndim</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r2<sp/>+=<sp/>trial_coords[j]<sp/>*<sp/>trial_coords[j];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r2<sp/>&gt;<sp/><ref refid="classmcpele_1_1CheckSphericalContainer_1a692b8da3daa2d45a7fc651d2ce045763" kindref="member">m_radius2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;fail<sp/>spherical<sp/>container<sp/>%d<sp/>%f<sp/>%f<sp/>%f<sp/>%f\n&quot;,<sp/>i,<sp/>sqrt(r2),<sp/>x[i],<sp/>x[i+1],<sp/>x[i+2]);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//an<sp/>atom<sp/>is<sp/>outside<sp/>the<sp/>spherical<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//printf(&quot;check<sp/>spherical<sp/>OK<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>mcpele</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/sm958/Work/mcpele/source/check_spherical_container.cpp"/>
  </compounddef>
</doxygen>
