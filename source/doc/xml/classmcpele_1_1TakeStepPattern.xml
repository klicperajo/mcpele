<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classmcpele_1_1TakeStepPattern" kind="class" prot="public">
    <compoundname>mcpele::TakeStepPattern</compoundname>
    <basecompoundref refid="classmcpele_1_1TakeStep" prot="public" virt="non-virtual">mcpele::TakeStep</basecompoundref>
    <includes refid="take__step__pattern_8h" local="no">take_step_pattern.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmcpele_1_1TakeStepPattern_1a4095a4ec7c00f7b9c94fad2c60999b93" prot="private" static="no" mutable="no">
        <type><ref refid="classmcpele_1_1PatternManager" kindref="compound">PatternManager</ref>&lt; std::shared_ptr&lt; <ref refid="classmcpele_1_1TakeStep" kindref="compound">TakeStep</ref> &gt; &gt;</type>
        <definition>PatternManager&lt;std::shared_ptr&lt;TakeStep&gt; &gt; mcpele::TakeStepPattern::m_steps</definition>
        <argsstring></argsstring>
        <name>m_steps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="28" bodyfile="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmcpele_1_1TakeStepPattern_1a574b72c67af41877b638d08b7a57e81b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual mcpele::TakeStepPattern::~TakeStepPattern</definition>
        <argsstring>()</argsstring>
        <name>~TakeStepPattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="30" bodyfile="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classmcpele_1_1TakeStepPattern_1a1bfe8206991a6aad0fdefe5ec916b31c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mcpele::TakeStepPattern::add_step</definition>
        <argsstring>(std::shared_ptr&lt; TakeStep &gt; step_input, const size_t repetitions_input=1)</argsstring>
        <name>add_step</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classmcpele_1_1TakeStep" kindref="compound">TakeStep</ref> &gt;</type>
          <declname>step_input</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>repetitions_input</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="32" bodyfile="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" bodystart="31" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classmcpele_1_1TakeStepPattern_1a8c5ef12183c58b84b3ff5e9276ec8688" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mcpele::TakeStepPattern::displace</definition>
        <argsstring>(pele::Array&lt; double &gt; &amp;coords, MC *mc)</argsstring>
        <name>displace</name>
        <reimplements refid="classmcpele_1_1TakeStep_1ac3032e0d99d4aa5f940ffea4a28442f5">displace</reimplements>
        <param>
          <type>pele::Array&lt; double &gt; &amp;</type>
          <declname>coords</declname>
        </param>
        <param>
          <type><ref refid="classmcpele_1_1MC" kindref="compound">MC</ref> *</type>
          <declname>mc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="33" bodyfile="/home/sm958/Work/mcpele/source/take_step_pattern.cpp" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classmcpele_1_1TakeStepPattern_1a6038fb5304e2a31c105fa5b537ee1b6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void mcpele::TakeStepPattern::report</definition>
        <argsstring>(pele::Array&lt; double &gt; &amp;old_coords, const double old_energy, pele::Array&lt; double &gt; &amp;new_coords, const double new_energy, const bool success, MC *mc)</argsstring>
        <name>report</name>
        <reimplements refid="classmcpele_1_1TakeStep_1aac4f30de62c4cbc4d9d31c7629742f64">report</reimplements>
        <param>
          <type>pele::Array&lt; double &gt; &amp;</type>
          <declname>old_coords</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>old_energy</declname>
        </param>
        <param>
          <type>pele::Array&lt; double &gt; &amp;</type>
          <declname>new_coords</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>new_energy</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>success</declname>
        </param>
        <param>
          <type><ref refid="classmcpele_1_1MC" kindref="compound">MC</ref> *</type>
          <declname>mc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="36" bodyfile="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classmcpele_1_1TakeStepPattern_1a811124bbaa7ee317943d6bedb8155711" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; mcpele::TakeStepPattern::get_pattern</definition>
        <argsstring>() const </argsstring>
        <name>get_pattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="38" bodyfile="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classmcpele_1_1TakeStepPattern_1ac6bf72bf5bb87c1fdd67999d88d85ed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; size_t &gt;</type>
        <definition>std::vector&lt;size_t&gt; mcpele::TakeStepPattern::get_pattern_direct</definition>
        <argsstring>()</argsstring>
        <name>get_pattern_direct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="39" bodyfile="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" bodystart="39" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Create a pattern of TakeSteps to be exectuted by <ref refid="classmcpele_1_1MC" kindref="compound">MC</ref>.</para><para>Example -------</para><para>To have <ref refid="classmcpele_1_1MC" kindref="compound">MC</ref> looping over a pattern consisting of 99 times step_A and 1 time step_B, do e.g.: auto pot = std::make_shared&lt;SomePotential&gt;(SomeParameters); auto mc = std::make_shared&lt;mcpele::MC&gt;(pot, SomeCoordinates, SomeTemperature); auto step_pattern = std::make_shared&lt;mcpele::TakeStepPattern&gt;(); auto step_A = std::make_shared&lt;SomeTakeStep&gt;(SomeParameters); auto step_B = std::make_shared&lt;SomeOtherTakeStep&gt;(SomeOtherParameters); step_pattern-&gt;add_step(step_A, 99); step_pattern-&gt;add_step(step_B, 1); mc-&gt;set_takestep(step_pattern); mc-&gt;run(1e6); </para>    </detaileddescription>
    <inheritancegraph>
      <node id="120">
        <label>mcpele::TakeStep</label>
        <link refid="classmcpele_1_1TakeStep"/>
      </node>
      <node id="119">
        <label>mcpele::TakeStepPattern</label>
        <link refid="classmcpele_1_1TakeStepPattern"/>
        <childnode refid="120" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="122">
        <label>mcpele::TakeStep</label>
        <link refid="classmcpele_1_1TakeStep"/>
      </node>
      <node id="121">
        <label>mcpele::TakeStepPattern</label>
        <link refid="classmcpele_1_1TakeStepPattern"/>
        <childnode refid="122" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" line="26" bodyfile="/home/sm958/Work/mcpele/source/mcpele/take_step_pattern.h" bodystart="26" bodyend="40"/>
    <listofallmembers>
      <member refid="classmcpele_1_1TakeStepPattern_1a1bfe8206991a6aad0fdefe5ec916b31c" prot="public" virt="non-virtual"><scope>mcpele::TakeStepPattern</scope><name>add_step</name></member>
      <member refid="classmcpele_1_1TakeStep_1a492ccf2a2e3b3d8ef2224947d0385d77" prot="public" virt="virtual"><scope>mcpele::TakeStepPattern</scope><name>decrease_acceptance</name></member>
      <member refid="classmcpele_1_1TakeStepPattern_1a8c5ef12183c58b84b3ff5e9276ec8688" prot="public" virt="virtual"><scope>mcpele::TakeStepPattern</scope><name>displace</name></member>
      <member refid="classmcpele_1_1TakeStepPattern_1a811124bbaa7ee317943d6bedb8155711" prot="public" virt="non-virtual"><scope>mcpele::TakeStepPattern</scope><name>get_pattern</name></member>
      <member refid="classmcpele_1_1TakeStepPattern_1ac6bf72bf5bb87c1fdd67999d88d85ed2" prot="public" virt="non-virtual"><scope>mcpele::TakeStepPattern</scope><name>get_pattern_direct</name></member>
      <member refid="classmcpele_1_1TakeStep_1afa92f5196e0304d6ad910304b188c705" prot="public" virt="virtual"><scope>mcpele::TakeStepPattern</scope><name>increase_acceptance</name></member>
      <member refid="classmcpele_1_1TakeStepPattern_1a4095a4ec7c00f7b9c94fad2c60999b93" prot="private" virt="non-virtual"><scope>mcpele::TakeStepPattern</scope><name>m_steps</name></member>
      <member refid="classmcpele_1_1TakeStepPattern_1a6038fb5304e2a31c105fa5b537ee1b6c" prot="public" virt="virtual"><scope>mcpele::TakeStepPattern</scope><name>report</name></member>
      <member refid="classmcpele_1_1TakeStep_1a82aab5c2527f8a7fd4c0f8a438dc3625" prot="public" virt="virtual"><scope>mcpele::TakeStepPattern</scope><name>~TakeStep</name></member>
      <member refid="classmcpele_1_1TakeStepPattern_1a574b72c67af41877b638d08b7a57e81b" prot="public" virt="virtual"><scope>mcpele::TakeStepPattern</scope><name>~TakeStepPattern</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
