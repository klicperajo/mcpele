<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classmcpele_1_1RecordLowestEValueTimeseries" kind="class" prot="public">
    <compoundname>mcpele::RecordLowestEValueTimeseries</compoundname>
    <basecompoundref refid="classmcpele_1_1RecordScalarTimeseries" prot="public" virt="non-virtual">mcpele::RecordScalarTimeseries</basecompoundref>
    <includes refid="record__lowest__evalue__timeseries_8h" local="no">record_lowest_evalue_timeseries.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmcpele_1_1RecordLowestEValueTimeseries_1a34ec878f524052c121349cb84c62e666" prot="private" static="no" mutable="no">
        <type><ref refid="classmcpele_1_1FindLowestEigenvalue" kindref="compound">FindLowestEigenvalue</ref></type>
        <definition>FindLowestEigenvalue mcpele::RecordLowestEValueTimeseries::m_lowest_ev</definition>
        <argsstring></argsstring>
        <name>m_lowest_ev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" line="15" bodyfile="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmcpele_1_1RecordLowestEValueTimeseries_1a9ab99a86595a3620babe35e5e1e26083" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mcpele::RecordLowestEValueTimeseries::RecordLowestEValueTimeseries</definition>
        <argsstring>(const size_t niter, const size_t record_every, std::shared_ptr&lt; pele::BasePotential &gt; landscape_potential, const size_t boxdimension, pele::Array&lt; double &gt; ranvec, const size_t lbfgsniter=30)</argsstring>
        <name>RecordLowestEValueTimeseries</name>
        <param>
          <type>const size_t</type>
          <declname>niter</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>record_every</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; pele::BasePotential &gt;</type>
          <declname>landscape_potential</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>boxdimension</declname>
        </param>
        <param>
          <type>pele::Array&lt; double &gt;</type>
          <declname>ranvec</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>lbfgsniter</declname>
          <defval>30</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" line="24" bodyfile="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" bodystart="17" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classmcpele_1_1RecordLowestEValueTimeseries_1a90ba22381fd38a8fff5adced32a2a64f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual mcpele::RecordLowestEValueTimeseries::~RecordLowestEValueTimeseries</definition>
        <argsstring>()</argsstring>
        <name>~RecordLowestEValueTimeseries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" line="25" bodyfile="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classmcpele_1_1RecordLowestEValueTimeseries_1affb535be88d9352a5b323e26a7c17bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double mcpele::RecordLowestEValueTimeseries::get_recorded_scalar</definition>
        <argsstring>(pele::Array&lt; double &gt; &amp;coords, const double energy, const bool accepted, MC *mc)</argsstring>
        <name>get_recorded_scalar</name>
        <reimplements refid="classmcpele_1_1RecordScalarTimeseries_1a8151f9f679c926d481e7354ac170663a">get_recorded_scalar</reimplements>
        <param>
          <type>pele::Array&lt; double &gt; &amp;</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>energy</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>accepted</declname>
        </param>
        <param>
          <type><ref refid="classmcpele_1_1MC" kindref="compound">MC</ref> *</type>
          <declname>mc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" line="28" bodyfile="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" bodystart="26" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Record time series of lowest eigenvalue </para>    </detaileddescription>
    <inheritancegraph>
      <node id="94">
        <label>mcpele::Action</label>
        <link refid="classmcpele_1_1Action"/>
      </node>
      <node id="92">
        <label>mcpele::RecordLowestEValueTimeseries</label>
        <link refid="classmcpele_1_1RecordLowestEValueTimeseries"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>mcpele::RecordScalarTimeseries</label>
        <link refid="classmcpele_1_1RecordScalarTimeseries"/>
        <childnode refid="94" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="97">
        <label>mcpele::Action</label>
        <link refid="classmcpele_1_1Action"/>
      </node>
      <node id="95">
        <label>mcpele::RecordLowestEValueTimeseries</label>
        <link refid="classmcpele_1_1RecordLowestEValueTimeseries"/>
        <childnode refid="96" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>mcpele::RecordScalarTimeseries</label>
        <link refid="classmcpele_1_1RecordScalarTimeseries"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" line="13" bodyfile="/home/sm958/Work/mcpele/source/mcpele/record_lowest_evalue_timeseries.h" bodystart="13" bodyend="29"/>
    <listofallmembers>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1a7cc733d8f0b8daebf4da92423793b9c7" prot="public" virt="virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>action</name></member>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1a0f616cd3a4e0dea710c0919f22b8f5ce" prot="public" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>clear</name></member>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1aa5cce7dde2ec7f096baeefad210ff063" prot="public" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>get_moving_average_mean</name></member>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1a0df1f17ac9304e831f37e7e97bf45b83" prot="public" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>get_moving_average_variance</name></member>
      <member refid="classmcpele_1_1RecordLowestEValueTimeseries_1affb535be88d9352a5b323e26a7c17bd2" prot="public" virt="virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>get_recorded_scalar</name></member>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1ad3c2dbc09a421030dcddff87d96299e5" prot="public" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>get_time_series</name></member>
      <member refid="classmcpele_1_1RecordLowestEValueTimeseries_1a34ec878f524052c121349cb84c62e666" prot="private" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>m_lowest_ev</name></member>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1a98fce48e1cc8cd2e73fb0705a4d05cde" prot="public" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>moving_average_is_stable</name></member>
      <member refid="classmcpele_1_1RecordLowestEValueTimeseries_1a9ab99a86595a3620babe35e5e1e26083" prot="public" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>RecordLowestEValueTimeseries</name></member>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1af446b764d9a8f16f67c751bfb94a47d1" prot="public" virt="non-virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>RecordScalarTimeseries</name></member>
      <member refid="classmcpele_1_1Action_1adee26930d409e327d88b8539b5bb3a67" prot="public" virt="virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>~Action</name></member>
      <member refid="classmcpele_1_1RecordLowestEValueTimeseries_1a90ba22381fd38a8fff5adced32a2a64f" prot="public" virt="virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>~RecordLowestEValueTimeseries</name></member>
      <member refid="classmcpele_1_1RecordScalarTimeseries_1aba51863fc7829b1fa7a2908ea3b8dd3c" prot="public" virt="virtual"><scope>mcpele::RecordLowestEValueTimeseries</scope><name>~RecordScalarTimeseries</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
